Component({
  data: {
    timer: null,
    syncFlag: false,
    d: '00',
    h: '00',
    i: '00',
    s: '00',
    leftTime: 0,
    seconds: 0
  },
  props: {
    showDay: true,
    showHour: true,
    showMinute: true,
    showColon: true,
    backgroundColor: '#FFFFFF',
    borderColor: '#000000',
    color: '#000000',
    splitorColor: '#000000',
    day: 0,
    hour: 0,
    minute: 0,
    second: 0,
    onTimeup: function onTimeup() {}
  },
  didMount: function didMount() {
    this.startData();
  },
  didUnmount: function didUnmount() {
    clearInterval(this.timer);
  },
  methods: {
    toSeconds: function toSeconds(day, hours, minutes, seconds) {
      if (day === void 0) {
        day = 0;
      }

      if (hours === void 0) {
        hours = 0;
      }

      if (minutes === void 0) {
        minutes = 0;
      }

      if (seconds === void 0) {
        seconds = 0;
      }

      return day * 60 * 60 * 24 + hours * 60 * 60 + minutes * 60 + seconds;
    },
    timeUp: function timeUp() {
      clearInterval(this.timer);
      var onTimeup = this.props.onTimeup;
      onTimeup && onTimeup(); // this.$emit('timeup');
    },
    countDown: function countDown() {
      var seconds = this.data.seconds;
      var day = 0,
          hour = 0,
          minute = 0,
          second = 0;

      if (seconds > 0) {
        day = Math.floor(seconds / (60 * 60 * 24));
        hour = Math.floor(seconds / (60 * 60)) - day * 24;
        minute = Math.floor(seconds / 60) - day * 24 * 60 - hour * 60;
        second = Math.floor(seconds) - day * 24 * 60 * 60 - hour * 60 * 60 - minute * 60;
      } else {
        this.timeUp();
      }

      var dayStr = "" + day;
      var hourStr = "" + hour;
      var minuteStr = "" + minute;
      var secondStr = "" + second;

      if (day < 10) {
        dayStr = "0" + day;
      }

      if (hour < 10) {
        hourStr = "0" + hour;
      }

      if (minute < 10) {
        minuteStr = "0" + minute;
      }

      if (second < 10) {
        secondStr = "0" + second;
      }

      this.setData({
        d: dayStr,
        h: hourStr,
        i: minuteStr,
        s: secondStr
      });
    },

    /**
     *
     */
    startData: function startData() {
      var _this = this;

      var _this$props = this.props,
          day = _this$props.day,
          hour = _this$props.hour,
          minute = _this$props.minute,
          second = _this$props.second;
      var seconds = this.toSeconds(day, hour, minute, second);

      if (seconds <= 0) {
        return;
      }

      this.setData({
        seconds: seconds
      });
      this.countDown();
      this.timer = setInterval(function () {
        var tempSeconds = _this.data.seconds;
        tempSeconds -= 1;

        _this.setData({
          seconds: tempSeconds
        });

        if (tempSeconds < 0) {
          _this.timeUp();

          return;
        }

        _this.countDown();
      }, 1000);
    },
    changeFlag: function changeFlag() {
      var syncFlag = this.data.syncFlag;

      if (!syncFlag) {
        // const { day, hour, minute, second } = this.data;
        // const seconds = this.toSeconds(day, hour, minute, second);
        this.startData();
        this.setData({
          syncFlag: true
        });
      }
    }
  }
});